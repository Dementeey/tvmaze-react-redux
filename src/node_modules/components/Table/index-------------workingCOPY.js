import React, {Component} from 'react';
import './index.scss';
import TableRow from 'components/TableRow';

// showOrHide(response) {
//   const resultSuccess = document.querySelector('.result .success');
//   const resultReject = document.querySelector('.result .reject');
//   const progress = document.querySelector('#progress');
//
//   if (response === 'pending') {
//     resultReject.classList.add('hide');
//     resultSuccess.classList.add('hide');
//     progress.classList.remove('hide');
//   }
//
//   if (response === 'resolve') {
//     resultReject.classList.add('hide');
//     resultSuccess.classList.remove('hide');
//     progress.classList.add('hide');
//   }
//   if (response === 'reject') {
//     resultSuccess.classList.add('hide');
//     resultReject.classList.remove('hide');
//     progress.classList.add('hide');
//   }
// }
// -------------------------------- END ---------------------------------

// check the status of the response from the server
// isState(state) {
//   // const progress = document.querySelector('#progress');
//
//   if (state) {
//     // progress.classList.add('hide');
//     this.showOrHide('resolve');
//   } else {
//     this.showOrHide('pending');
//   }
// }


export default class Table extends Component {
  state = {
    tableStatus: true,
    nameSort: false,
    ratingSort: false,
    elName: null,
    elRating: null
  };


  componentDidUpdate() {
  // TODO --- попробовать вынести в одну функцию 2 вызова но 1 функия
     if (this.state.nameSort) {
       this.state.elName.classList.add('sorted-up')
     }
     if (!this.state.nameSort) {
       this.state.elName.classList.remove('sorted-up')
     }
    //-----------------------------------------------------------

    if (this.state.ratingSort) {
      this.state.elRating.classList.add('sorted-up')
    }
    if (!this.state.ratingSort) {
      this.state.elRating.classList.remove('sorted-up')
    }
    //-----------------------------------------------------------

  }
  // -------------------------------- END ---------------------------------


  onClickOnTable = (event) => {
    this.props.ocClickTable(event);

    //dispatch вношу ссылку на элементы
    this.setState({
      elName: this.elName,
      elRating: this.elRating,
    });

    //dispatch 2 вношу изменение да нет  на ссылку для сортировки строк имени
    if (event.target.dataset.string) {
      this.setState({
        nameSort: !this.state.nameSort,
        ratingSort: false
      });
    }
    //-----------------------------------------------------------

    //dispatch 3 вношу изменение да нет  на ссылку для сортировки чисел рейтинга
    if (event.target.dataset.num) {
      this.setState({
        ratingSort: !this.state.ratingSort,
        nameSort: false
      });
    }
    //-----------------------------------------------------------

  };
  // -------------------------------- END ---------------------------------


  render() {
    const data = this.props.data;
    console.log('new DATA', data);
    return (
      this.state.tableStatus ?
        <table className='table' onClick={(event) => this.onClickOnTable(event)}>
            <tbody>
            <tr>
              <th className='coll-sort sorted-down' data-string='1' ref={el => this.elName = el}>Show name
              </th>
              <th>Language</th>
              <th>Genres</th>
              <th>Status of show</th>
              <th className='coll-sort sorted-down' data-num='1' ref={el => this.elRating = el}>Rating
              </th>
            </tr>
            {data.map((el) => {
              return (
                  <TableRow
                    key={el[0]}
                    id={el[0]}
                    showName={el[1]}
                    language={el[2]}
                    genres={el[3]}
                    status={el[4]}
                    rating={el[5]}
                    // showName={data[index].show.name}
                    // language={data[index].show.language}
                    // genres={data[index].show.genres.length ? data[index].show.genres.join(', ') : '-'}
                    // status={data[index].show.status}
                    // rating={data[index].show.rating.average ? data[index].show.rating.average : 0}
                  />
              );
            })}
            </tbody>
          </table>
        : ''
    );
  }
}
