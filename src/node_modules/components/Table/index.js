import React, {Component, Fragment} from 'react';
import './index.scss';
import TableRow from 'components/TableRow';
import myHistory from 'myHistory';
import {parseResponseInNewArray, patternSorting} from 'myHelpers';


export default class Table extends Component {
  state = {
    dataParsedInArr: [],
    nameSort: false,
    ratingSort: false
  };


  componentWillMount() {
    if (this.props.state.responseData.length)  {
      this.props.onSetTrueSuccess()
    }
    // const newArr = parseResponseInNewArray(localData);
    const newArr = parseResponseInNewArray(this.props.state.responseData);
    this.setState({dataParsedInArr: newArr});
  }
  // -------------------------------- END ---------------------------------

  componentDidUpdate() {

  }
  // -------------------------------- END ---------------------------------


  onClickOnTable = (event) => {
    if (!this.props.state.successStatus) return;

    if (event.target.dataset.string) {
      const elName = event.target;

      !this.state.nameSort
        ? elName.classList.add('sorted-up')
        : elName.classList.remove('sorted-up');
    }
    //-----------------------------------------------------------


    if (event.target.dataset.num) {
      const elRating = event.target;

      !this.state.ratingSort
        ? elRating.classList.add('sorted-up')
        : elRating.classList.remove('sorted-up');
    }
    //-----------------------------------------------------------


    if (event.target.parentElement.classList.contains('table__row-data')) {
      const id = +event.target.parentElement.dataset.id;
      this.props.onSetID(id);
      return myHistory.push(`/details/:id${id}`)
    }
  };
  // -------------------------------- END ---------------------------------


  handleSortName = () => {
    this.setState({
      nameSort: !this.state.nameSort,
      ratingSort: false,
      dataParsedInArr: patternSorting(
        this.state.dataParsedInArr,
        this.state.nameSort,
        'str',
        1
      )
    })
  };
  // -------------------------------- END ---------------------------------


  handleSortRating = () => {
    this.setState({
      ratingSort: !this.state.ratingSort,
      nameSort: false,
      dataParseInArrow: patternSorting(
        this.state.dataParsedInArr,
        this.state.ratingSort,
        'num',
        5
      )
    })
  };
  // -------------------------------- END ---------------------------------


  renderSuccess = () => {
    console.log('success');
  return (
    <Fragment>
      <table className='table' onClick={(event) => this.onClickOnTable(event)}>
        <tbody>
          <tr>
            <th
              className='coll-sort sorted-down'
              onClick={this.handleSortName}
              data-string='1'
              ref={el => this.elName = el}>
              Show name
            </th>
            <th>Language</th>
            <th>Genres</th>
            <th>Status of show</th>
            <th
              className='coll-sort sorted-down'
              onClick={this.handleSortRating}
              data-num='1'
              ref={el => this.elRating = el}>
              Rating
            </th>
          </tr>
          {this.state.dataParsedInArr.map((el) => {
            return (
              <TableRow
                key={el[0]}
                id={el[0]}
                showName={el[1]}
                language={el[2]}
                genres={el[3]}
                status={el[4]}
                rating={el[5]}
              />
            );
          })}
        </tbody>
      </table>
    </Fragment>
  )
  };
// -------------------------------- END ---------------------------------

  renderPending = () => {
    console.log('pending');
    return (
      <div className="progress rotating" id="progress">
        <div className="progress-reverse rotating-reverse"></div>
      </div>
    );
  };
// -------------------------------- END ---------------------------------

  renderReject = () => {
    console.log('reject');
    return (
      <div className="reject">
        <p className="reject__text">There is no data for this query.</p>
      </div>
    );
  };

// -------------------------------- END ---------------------------------

  render() {
    return (
    this.props.state.successStatus
      ? this.renderSuccess()
      : this.props.state.rejectStatus
        ? this.renderReject()
        : this.renderPending()
    );
  }
}
