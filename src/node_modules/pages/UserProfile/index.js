import React, {Component} from 'react';
import Input from 'components/Input/index';
import Button from 'components/Button/index';
import './index.scss';
import myHistory from 'myHistory'

export default class extends Component {
  state = {
    prevFirstName: null,
    prevLastName: null,
    prevEmail: null,
    prevUserName: null,
    prevPassword: null,
    prevBirthday: null,
    prevPhone: null,
    prevRadioMale: null,
    prevRadioFemale: null,
    prevSelect: null
  };

  componentWillMount() {
   const getLocalUser = JSON.parse(localStorage.getItem('user'));
   this.setState({
     prevFirstName: getLocalUser.firstName,
     prevLastName: getLocalUser.lastName,
     prevEmail: getLocalUser.email,
     prevUserName: getLocalUser.userName,
     prevPassword: getLocalUser.password,
     prevBirthday: getLocalUser.birthday,
     prevPhone: getLocalUser.phone,
     prevRadioMale: getLocalUser.radioMale,
     prevRadioFemale: getLocalUser.radioFemale,
     prevSelect: getLocalUser.select
   })
  }
  userUpdate = (obj) => {
    localStorage.setItem('user',  JSON.stringify(obj));
  };

  onSubmitSave = (event) => {
    event.preventDefault();
    this.userUpdate({
      firstName: this.firstName.value ? this.firstName.value : this.state.prevFirstName,
      lastName: this.lastName.value ? this.lastName.value : this.state.prevLastName,
      email: this.state.prevEmail,
      userName: this.userName.value ? this.userName.value : this.state.prevUserName,
      password: this.userName.value ? this.userName.value : this.state.prevPassword,
      birthday: this.birthday.value || this.state.prevBirthday,
      phone: this.phone.value || this.state.prevPhone,
      radioMale: this.radioMale.checked || this.state.prevRadioMale,
      radioFemale: this.radioFemale.checked || this.state.prevRadioFemale,
      select: this.select.value || this.state.prevSelect
    });
    this.popup();

    return myHistory.replace('/profile')
  };

  popup = () => {
    this.popupSuccess.classList.add('profile__popup--success');
    setTimeout(() => {
      if (!this.popupSuccess) return;
      this.popupSuccess.classList.remove('profile__popup--success');
    }, 1800);
  };

  render() {
    return (

      <div className="profile">
        <div className='profile__popup' ref={(div) => this.popupSuccess = div}></div>
        <form onSubmit={this.onSubmitSave} className="profile__form">
          <label>
            First name:
            <Input
              type="text"
              name="firstname"
              placeholder={this.state.prevFirstName}
              refs={(input) => this.firstName = input}
            />
          </label>
          <label>
            Last name:
            <Input
              type="text"
              name="lastname"
              placeholder={this.state.prevLastName}
              refs={(input) => this.lastName = input}
            />
          </label>
          <label>
            E-mail:
            <Input
              type="text"
              name="email"
              // placeholder={}
              value={this.state.prevEmail}
              disab={true}
            />
          </label>
          <label>
            Username:
            <Input
              type="username"
              name="username"
              placeholder={this.state.prevUserName}
              refs={(input) => this.userName = input}
            />
          </label>
          <label>
            Password:
            <Input
              type="password"
              name="password"
              placeholder="****** [0-9a-zA-Z!@#$%^&*]"
              autocomp='new-password'

              pattern="(?=.*[0-9])(?=.*[!@#$%^&*]?)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}"
              refs={(input) => this.password = input}
            />
          </label>
          <label>
            Birthday: "YYYY/MM/DD"
            <Input
              type="text"
              name="birthday"
              placeholder={this.state.prevBirthday}
              pattern="[0-9]{4}\/[0-9]{2}\/[0-9]{1,2}"
              refs={(input) => this.birthday = input}
            />
          </label>
          <label>
            Phone: "+38-XXX-XXX-XX-XX"
            <Input
              type="phone"
              name="phone"
              placeholder={this.state.prevPhone}
              refs={(input) => this.phone = input}
              pattern="^(\s*)?(\+)?([- _():=+]?\d[- _():=+]?){10,14}(\s*)?$"
            />
          </label>


          <div className="wrap-other-input">
            <div className="wrap-other-input-left">
              <label>
                Male:
                <Input
                  type="radio"
                  name="gender"
                  value="male"
                  check={this.state.prevRadioMale}
                  refs={(input) => this.radioMale = input}
                />
                <span className="slider" />
              </label>

              <label>
                Female:
                <Input
                  type="radio"
                  name="gender"
                  value="female"
                  check={this.state.prevRadioFemale}
                  refs={(input) => this.radioFemale = input}
                />
                <span className="slider" />
              </label>
            </div>

            <div className="wrap-other-input-right">
              <label>
                Family status:
                <select name="family-status" ref={(input) => this.select = input}>
                  <option value="married">Married</option>
                  <option value="unmarried">Unmarried</option>
                  <option value="active">Actively looking</option>
                  <option value="developer">Developer</option>
                </select>
              </label>
            </div>
          </div>

          <Button text="Save" />
        </form>
      </div>
    );
  }
}
