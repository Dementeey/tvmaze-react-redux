import React, {Component} from 'react';
import Input from 'components/Input/index';
import Button from 'components/Button/index';
import './index.scss';

export default class extends Component {
  state = {
    localUser: JSON.parse(localStorage.getItem('user')),
    prevFirstName: null,
    prevLastName: null,
    prevEmail: null,
    prevUserName: null,
    prevPassword: null,
    prevBirthday: null,
    prevPhone: null,
    prevRadioMale: null,
    prevRadioFemale: null,
    prevSelect: null
  };

  componentWillMount() {
    this.setState({
      prevFirstName: this.state.localUser.firstName,
      prevLastName: this.state.localUser.lastName,
      prevEmail: this.state.localUser.email,
      prevUserName: this.state.localUser.userName,
      prevPassword: this.state.localUser.password,
      prevBirthday: this.state.localUser.birthday,
      prevPhone: this.state.localUser.phone,
      prevRadioMale: this.state.localUser.radioMale,
      prevRadioFemale: this.state.localUser.radioFemale,
      prevSelect: this.state.localUser.select
    })
  }


  userUpdate = () => {

    return {
      firstName: this.firstName.value || this.state.localUser.firstName,
      lastName: this.lastName.value || this.state.localUser.lastName,
      email: this.state.localUser.email,
      userName: this.userName.value || this.state.localUser.userName,
      password: this.password.value || this.state.localUser.password,
      birthday: this.birthday.value || this.state.localUser.birthday,
      phone: this.phone.value || this.state.localUser.phone,
      radioMale: this.radioMale.checked || this.state.localUser.radioMale,
      radioFemale: this.radioFemale.checked || this.state.localUser.radioFemale,
      select: this.select.value || this.state.localUser.select
    };

    // return {
    //   firstName: this.firstName.current.value || this.state.localUser.firstName,
    //   lastName: this.lastName.current.value || this.state.localUser.lastName,
    //   email: this.state.localUser.email,
    //   userName: this.userName.current.value || this.state.localUser.userName,
    //   password: this.password.current.value || this.state.localUser.password,
    //   birthday: this.birthday.current.value || this.state.localUser.birthday,
    //   phone: this.phone.current.value || this.state.localUser.phone,
    //   radioMale: this.radioMale.current.checked || this.state.localUser.radioMale,
    //   radioFemale: this.radioFemale.current.checked || this.state.localUser.radioFemale,
    //   select: this.select.current.value || this.state.localUser.select
    // };
  };

  popup = () => {
    this.popupSuccess.classList.add('profile__popup--success');
    setTimeout(() => {
      if (!this.popupSuccess) return;
      this.popupSuccess.classList.remove('profile__popup--success');
    }, 1800);
  };

  onSubmitSave = (event) => {
    event.preventDefault();
    this.popup();


    const user = {
      firstName: this.firstName.value || this.state.prevFirstName,
      lastName: this.lastName.value || this.state.prevLastName,
      email: this.state.localUser.email,
      userName: this.userName.value || this.state.prevUserName,
      password: this.password.value || this.state.prevPassword,
      birthday: this.birthday.value || this.state.prevBirthday,
      phone: this.phone.value || this.state.prevPhone,
      radioMale: this.radioMale.checked || this.state.prevRadioMale,
      radioFemale: this.radioFemale.checked || this.state.prevRadioFemale,
      select: this.select.value ? this.select.value : this.state.prevSelect
    };




      const localUser = JSON.parse(localStorage.getItem('user'));
    this.setState((prevState, props) => ({
      prevFirstName: this.firstName.value ? this.firstName.value: this.state.prevFirstName,
      prevLastName: this.lastName.value ? this.lastName.value : this.state.prevLastName,
      prevEmail: this.state.localUser.email,
      prevUserName: this.userName.value ? this.userName.value : this.state.prevUserName,
      prevPassword: this.password.value ? this.password.value : this.state.prevPassword,
      prevBirthday: this.birthday.value ? this.birthday.value : this.state.prevBirthday,
      prevPhone: this.phone.value ? this.phone.value : this.state.prevPhone,
      prevRadioMale: this.radioMale.checked ? this.radioMale.checked : this.state.prevRadioMale,
      prevRadioFemale: this.radioFemale.checked ? this.radioFemale.checked : this.state.prevRadioFemale,
      prevSelect: this.select.value ? this.select.value : this.state.prevSelect
    }));
    // this.setState(this.userUpdate());
    localStorage.setItem('user',  JSON.stringify(user));
  };



  render() {
    return (
      <div className="profile">
        <div className='profile__popup' ref={(div) => this.popupSuccess = div}/>
        <form onSubmit={this.onSubmitSave} className="profile__form">
          <div className='profile__form-left'>
            <label>
              First name: <span className='savedValue'>{this.state.prevFirstName}</span>
              <Input
                type="text"
                name="firstname"
                placeholder='First name'
                // refs={this.firstName}
                refs={(input) => this.firstName = input}
              />
            </label>
            <label>
              Last name: <span className='savedValue'>{this.state.prevLastName}</span>
              <Input
                type="text"
                name="lastname"
                placeholder="Last name"
                // refs={this.lastName}
                refs={(input) => this.lastName = input}
              />
            </label>
            <label>
              Username: <span className='savedValue'>{this.state.prevUserName}</span>
              <Input
                type="username"
                name="username"
                placeholder='username'
                // refs={this.userName}
                refs={(input) => this.userName = input}
              />
            </label>
            <label className='profile__form-email'>
              E-mail: immutable
              <Input
                type="text"
                name="email"
                value={this.state.localUser.email}
                disab={true}
              />
            </label>
            <label>
              Password: "0-9 a-Z !@#$%^&*"
              <Input
                type="password"
                name="password"
                placeholder="******"
                autocomp='new-password'

                pattern="(?=.*[0-9])(?=.*[!@#$%^&*]?)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}"
                // refs={this.password}
                refs={(input) => this.password = input}
              />
            </label>
          </div>
          <div className="profile__form-right ">
            <label>
              Phone: <span>{this.state.prevPhone}</span>
              <Input
                type="phone"
                name="phone"
                placeholder="+38-XXX-XXX-XX-XX"
                pattern="^(\s*)?(\+)?([- _():=+]?\d[- _():=+]?){10,14}(\s*)?$"
                // refs={this.phone}
                refs={(input) => this.phone = input}
              />
            </label>
            <label>
              Birthday: <span className='savedValue'>{this.state.prevBirthday}</span>
              <Input
                type="text"
                name="birthday"
                placeholder='YYYY/MM/DD'
                pattern="[0-9]{4}\/[0-9]{2}\/[0-9]{1,2}"
                // refs={this.birthday}
                refs={(input) => this.birthday = input}
              />
            </label>
            <div className="wrap-other-input-left">
              <label>
                Male:
                <Input
                  type="radio"
                  name="gender"
                  value="male"
                  check={this.state.prevRadioMale}
                  refs={(input) => this.radioMale = input}
                />
                <span className="slider" />
              </label>

              <label>
                Female:
                <Input
                  type="radio"
                  name="gender"
                  value="female"
                  check={this.state.prevRadioFemale}
                  refs={(input) => this.radioFemale = input}
                />
                <span className="slider" />
              </label>
            </div>

            <label className='status'>
              Family status:
              <select defaultValue={this.state.prevSelect} name="family-status" ref={(input) => this.select = input}>
                <option value="married">Married</option>
                <option value="unmarried">Unmarried</option>
                <option value="active">Actively looking</option>
                <option value="developer">Developer</option>
              </select>
            </label>

          </div>
         <Button text="Save"/>
        </form>
      </div>
    );
  }
}
